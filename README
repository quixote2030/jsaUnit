jsaUnit - Asynchronous JavaScript Unit Test Module
 (c) 2009, Christopher Byrum (quixote2030)
 Released under the MIT license
 
== Description

 Asynchronous JavaScript UNIT testing can be a pain in the ass, so I wrote this little module to make it a bit easier to handle. The 
 jsaUnit module allows you to:
    1. Provide a list of asynchronous functions to execute, and register the arguments provided by each async callback
    2. Receive notification once all callbacks are complete - in order to kick-off the UNIT tests/test runner
    3. For each async function retrieve the callback arguments, which are in turn passed to a function containing your assertions
 
 See the usage examples below. I provided examples using two different UNIT test frameworks (JSUNIT and FireUnit). Also, I have provided
 jsdoc documentation, which you can find under the predictably named "jsdoc" directory.
 
 
== Code
 
 Browse it:
  - http://github.com/quixote2030/jsaUnit.git
 
 Clone it:
  - git clone git://github.com/quixote2030/jsaUnit.git
 
 
== Usage
 
  /* An example using JSUNIT */

  //kick off async function
  jsaUnit.run(
     function () {
        jQuery.ajax({
            url: "/someApp/TestEndpoint",
            complete: function () {
                //register the callback
                jsaUnit.callback("myKey", arguments);
            }
        });
     })
     //when all async functions are finished...
     .whenDone(function () {
        //setting status notifies the jsunit test runner to start
        setUpPageStatus = 'complete';
     });


  /* JSUNIT tests (and setup) */
  function setUpPage() {
     setUpPageStatus = "running"; //causes the test runner to delay start of tests
  }
  
  function testShouldDoSomething () {
     //retrieve async callback arguments, which are passed to function provided
     jsaUnit.test("myKey", function(xmlHttp, textStatus) {
        assertEquals("You can't make me like Morrissey", xmlHttp.responseText);
     });
  }


 
  /* 
  Another example using FireUnit
  Main difference is how test runner is kicked off, also note that I'm passing a variable list of 
  functions as params to 'run' method
  */
  
  jsaUnit.run(
    function () {
        jQuery.ajax({
            //some options...
            complete: function () {
                jsaUnit.callback("testShouldDoSomething", arguments);
            }
        });
    },
    function () {
        jQuery.ajax({
            //some options...
            complete: function () {
                jsaUnit.callback("testShouldDoSomethingElse", arguments);
            }
        });
    },
    function () {
        jQuery.ajax({
            //some options...
            complete: function () {
                jsaUnit.callback("testShouldDoYetAnotherThing", arguments);
            }
        });
    })
    .whenDone(function () {
        runTests();
    });
  
  /* FireUnit tests */
  function runTests () {
     
     jsaUnit.test("testShouldDoSomething", function(xmlHttp, textStatus) {
        fireunit.compare("Every time I run my tests, somewhere a CEO learns to love", xmlHttp.responseText);
     });
     
     jsaUnit.test("testShouldDoSomethingElse", function(xmlHttp, textStatus) {
        //assertions...
     });
     
     jsaUnit.test("testShouldDoYetAnotherThing", function(xmlHttp, textStatus) {
        //assertions...
     });
     
  }

 
 
== License
 Released under the MIT license
